from filplus_autocap.filecoin import Filecoin
from filplus_autocap.wallet import Wallet
from filplus_autocap.revenue_bot import RevenueBot
from filplus_autocap.datacap_bot import DatacapBot
from filplus_autocap.verified_sp_list import VerifiedSPList
from filplus_autocap.transaction import Tx, TxProcessor
from filplus_autocap.constants import GAS_PRICE, FILECOIN_ADDRESS
from filplus_autocap.master_bot import MasterBot

# --- Setup ---
datacap_wallet = Wallet(address="f1_datacap_wallet", owner="datacap-bot", datacap_balance=10_000)
sp_wallet = Wallet(address="f1sp001", owner="sp001", fil_balance=100.0 + 2 * GAS_PRICE)
protocol_wallet = Wallet(address="f1protocolwallet", owner="protocol")
revenue_bot = RevenueBot(address="f1revenuebot", protocol_wallet_address="f1protocolwallet", verified_sp_list=None)
revenue_bot_wallet = revenue_bot
filecoin = Filecoin(FILECOIN_ADDRESS)
burn_wallet = Wallet(address="f099", owner="burn", fil_balance=0.0)


verified_list = VerifiedSPList()
revenue_bot.verified_sp_list = verified_list

wallets = {
    "f_filecoin": filecoin,
    "f1_datacap_wallet": datacap_wallet,
    "f1sp001": sp_wallet,
    "f1protocolwallet": protocol_wallet,
    "f1revenuebot": revenue_bot_wallet,
    "f1datacapbot": datacap_wallet,
    "f_verifiedsp_list": verified_list,
    "f1masterbot": Wallet(address="f1masterbot", owner="master-bot"),  # dummy for TxProcessor
    "f099": burn_wallet,  # ðŸ”¥ Burn wallet

}

datacap_bot = DatacapBot(address="f1datacapbot", datacap_wallet=datacap_wallet)
master_bot = MasterBot(
    address="f1masterbot",
    revenue_bot=revenue_bot,
    datacap_bot=datacap_bot,
    master_fee_ratio=0.1,
    datacap_distribution_total=1000.0
)

processor = TxProcessor(wallets)

# --- Step 1: Registration ---
registration_tx = Tx(
    sender="f1sp001",
    recipient=verified_list.address,
    fil_amount=0.0,
    datacap_amount=0.0,
    signers=["f1sp001"],
    message="Registering"
)
print("Registration:", registration_tx)
processor.send([registration_tx])

# --- Step 2: SP sends revenue to RevenueBot ---
incoming = Tx(
    sender="f1sp001",
    recipient="f1revenuebot",
    fil_amount=100.0,
    signers=["f1sp001"]
)
print("\nIncoming FIL:", incoming)
processor.send([incoming])
resulting_txs = revenue_bot.process_incoming_tx(incoming)

for tx in resulting_txs:
    print("Generated by RevenueBot:", tx)
    processor.send([tx])

# --- Step 3: Auction End â€” MasterBot drains auction and executes logic ---
reward_txs = master_bot.execute_auction_round()
for tx in reward_txs:
    print(revenue_bot.fil_balance)
    print("MasterBot Tx:", tx)
    processor.send([tx])

# --- Final State ---
print("\n--- Final Wallet Balances ---")
for addr, wallet in wallets.items():
    print(wallet)

print("\n--- Auction State (should be empty) ---")
print(revenue_bot.current_auction)
